
11/01/2011 Changes

Added to grammar to allow parsing of each kind of statement. See 'statements:' in grammar file.
Answering the result of an expression is now implemented. If an expreesion result is not answered
the value is popped off the stack to keep it balanced.


10/01/2011 Changes

Added ProtoMethod as base for all methods.
Made fixes suggested by David Kemp for Windows platform.
Added Tests for ProtoObject to drive out method lookup and dispatch.
Added instance variables holder in ProtoObject. Offset 0 is always the
class object.
Added src/main/smalltalk/Redline folder, which will contain the Smalltalk
source for the runtime.
Default namespace for Smalltalk Runtime Objects is Redline.
Tracking line number for Parse tokens and adding to generated bytecode. Now any
exception shows corresponding line in Smalltalk source file
Added grammar to allow for multiple expressions seperated by '.'
Added pop of stack when expression result is not answered.


07/01/2011 Changes

Add 'sourcepath' command line option for specifying which folder to look in
for source files. The leading sourcepath names are removed from source filenames.
eg: sourcepath src/test and a source file of src/test/smalltalk/Object.st
will result in a source filename of smalltalk/Object.st and a class Object in 
the package smalltalk. 


06/01/2011 Changes

Cleaned up Smalltalk class and readying it for resolving Classes.
Send being called but dispatch wont be implemented until Class resolution in place.
Thinking through Class resolution process.


04/01/2011 Changes

Changed Smalltalk Class to be a Class Loader, and set itself as context class loader,
so code can use Thread.currentThread().getContextClassLoader() to get hold of the active
Smalltalk instance.
Added Test around generating message sends.

Added ObjectWeb ASM library for generating java bytecodes.
Added GeneratorTest to drive out Generator functionality.
Added Tracing versions of the ObjectWeb classes so I can see what is happening. 

Removed verifyNoMoreInteractions from tests until I work out how to properly ensure no
unsolicited calls are made to mocks.


01/01/2011 Changes

Adding more tests around analyser. Fleshing out interaction with generator.


28/10/2010 Changes

Added SourceFile to add methods to File that we need.
Added Tests around Analysis and interaction with generator.


24/10/2010 Changes

Added AnalyserTest to drive out interaction with Nodes and Generator.
Added Analyser class.
Added Generator class.


23/12/2010 Changes

Added parsing of source input into Node tree.
Added visiting of Node tree.
Fixed an error in capturing multiple unary messages in grammar.
Slapped self on wrist for not updating this file more frequently.


21/12/2010 Changes

Added delegation to Interpreter to interpret source code. Added Tests around delegation.


20/12/2010 Changes

Added stic.bat supplied by Jeff Heon. Adapted from Kasim's ClojureW Project (https://bitbucket.org/kasim/clojurew)
Refactored File related functionality out into FileReader class. Need tests around FileReader.


16/12/2010 Changes

Refactored SticTest to use PrintWriters rather than PrintStreams, since PrintWriters
will be used later. Makes for less code = good. Refactoring suggested by David Kemp.

Added Smalltalk and Environment Tests and Classes.

Added Mockito mocking framework to help with Testing.

